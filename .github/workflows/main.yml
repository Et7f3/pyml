name: main
on: [push]
jobs:
  check-image-python-3-11-rc1:
    runs-on: ubuntu-latest
    outputs:
      image-changed: ${{ steps.check-changed.outputs.image-changed }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 2
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.packages_read }}
      - id: check-changed
        name: Check changed
        run: |
          if docker pull ghcr.io/thierry-martinez/python-3.11-rc1 && \
            git diff --quiet --exit-code HEAD^ HEAD -- \
            dockerfiles/python-3.11.0rc1; then
            changed=0
          else
            changed=1
          fi
          echo "Has changed: $changed"
          echo "::set-output name=image-changed::$changed"

  image-python-3-11-rc1:
    needs: [check-image-python-3-11-rc1]
    if: needs.check-image-python-3-11-rc1.outputs.image-changed == '1'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Build
        run: |
          cd dockerfiles/python-3.11.0rc1
          docker build -t ghcr.io/thierry-martinez/python-3.11-rc1 .
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.packages_write }}
      - name: Push
        run:
          docker push ghcr.io/thierry-martinez/python-3.11-rc1

  python-3-11-rc1:
    needs: [image-python-3-11-rc1]
    if: always() && (needs.image-python-3-11-rc1.result == 'success' || needs.image-python-3-11-rc1.result == 'skipped')
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/thierry-martinez/python-3.11-rc1
      credentials:
        username: ${{ github.actor }}
        password: ${{ secrets.packages_read }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Build
        run: |
          chown -R ci .
          su ci --command "make STDCOMPAT=/home/ci/stdcompat-19"
      - name: Test
        run: |
          apt-get install --yes libssl-dev 
          su ci --command "LD_LIBRARY_PATH=/usr/local/lib pip3 install numpy"
          su ci --command "LD_LIBRARY_PATH=/usr/local/lib make STDCOMPAT=/home/ci/stdcompat-19 test"

  check-image-fedora-rawhide:
    runs-on: ubuntu-latest
    outputs:
      image-changed: ${{ steps.check-changed.outputs.image-changed }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 2
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.packages_read }}
      - id: check-changed
        name: Check changed
        run: |
          if docker pull ghcr.io/thierry-martinez/fedora-rawhide && \
            git diff --quiet --exit-code HEAD^ HEAD -- \
            dockerfiles/fedora-rawhide; then
            changed=0
          else
            changed=1
          fi
          echo "Has changed: $changed"
          echo "::set-output name=image-changed::$changed"

  image-fedora-rawhide:
    needs: [check-image-fedora-rawhide]
    if: needs.check-image-fedora-rawhide.outputs.image-changed == '1'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Build
        run: |
          cd dockerfiles/fedora-rawhide
          docker build -t ghcr.io/thierry-martinez/fedora-rawhide .
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.packages_write }}
      - name: Push
        run:
          docker push ghcr.io/thierry-martinez/fedora-rawhide

  fedora-rawhide:
    needs: [image-fedora-rawhide]
    if: always() && (needs.image-fedora-rawhide.result == 'success' || needs.image-fedora-rawhide.result == 'skipped')
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/thierry-martinez/fedora-rawhide
      credentials:
        username: ${{ github.actor }}
        password: ${{ secrets.packages_read }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Build and test
        run: |
          chown -R ci .
          su ci --command "opam exec dune runtest"
